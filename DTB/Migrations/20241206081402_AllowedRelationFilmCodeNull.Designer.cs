// <auto-generated />
using System;
using DTB.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DTB.Migrations
{
    [DbContext(typeof(BatteryDbContext))]
    [Migration("20241206081402_AllowedRelationFilmCodeNull")]
    partial class AllowedRelationFilmCodeNull
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BatteryRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmCode")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("JellyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("FilmCode");

                    b.HasIndex("JellyCode");

                    b.HasIndex("ShellCode");

                    b.ToTable("BatteryRelations");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.AppearanceInspectionData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmCode" }, "IX_FilmCode")
                        .IsUnique();

                    b.ToTable("AppearanceInspectionDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.BeadingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("BeadingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.BiInsertingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JellyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JellyCode")
                        .IsUnique();

                    b.ToTable("BiInsertingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.BottomWelding1Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("BottomWelding1Datas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.BottomWelding2Data", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("BottomWelding2Datas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.CapWeldingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("CapWeldingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.FilmShrinkingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("FilmShrinkingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.InjectingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("InjectingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.InkjetPrintingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("InkjetPrintingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.JellyFedingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JellyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JellyCode")
                        .IsUnique();

                    b.ToTable("JellyFedingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.NeckingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("NeckingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.PlasticFilmingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("PlasticFilmingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.PreChargeData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FilmCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "FilmCode" }, "IX_FilmCode")
                        .IsUnique();

                    b.ToTable("PreChargeDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.SealingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("SealingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.ShellInsertingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("JellyCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("JellyCode")
                        .IsUnique();

                    b.ToTable("ShellInsertingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.ShortCircuitTestData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("ShortCircuitTestDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.TiInsertingData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("TiInsertingDatas");
                });

            modelBuilder.Entity("DTB.Data.BatteryData.XRAYData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<float?>("Param1")
                        .HasColumnType("real");

                    b.Property<float?>("Param2")
                        .HasColumnType("real");

                    b.Property<float?>("Param3")
                        .HasColumnType("real");

                    b.Property<float?>("Param4")
                        .HasColumnType("real");

                    b.Property<float?>("Param5")
                        .HasColumnType("real");

                    b.Property<float?>("Param6")
                        .HasColumnType("real");

                    b.Property<float?>("Param7")
                        .HasColumnType("real");

                    b.Property<float?>("Param8")
                        .HasColumnType("real");

                    b.Property<float?>("Param9")
                        .HasColumnType("real");

                    b.Property<string>("ShellCode")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("StringParam1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StringParam2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ngReason")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("result")
                        .HasColumnType("bit");

                    b.Property<DateTime>("updateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("uploadTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ShellCode")
                        .IsUnique();

                    b.ToTable("XRAYDatas");
                });

            modelBuilder.Entity("DTB.Data.Devices.DeviceModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DeviceAvatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeviceCode")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("DeviceData")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DeviceCode")
                        .IsUnique()
                        .HasFilter("[DeviceCode] IS NOT NULL");

                    b.ToTable("Devices", null, t =>
                        {
                            t.ExcludeFromMigrations();
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
